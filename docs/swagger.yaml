basePath: /
definitions:
  admin_web.LoginAdminRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  admin_web.RegisterAdminRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  admin_web.UpdateAdminRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  buyer_web.CreateOrderRequest:
    properties:
      event_id:
        type: integer
      qty:
        type: integer
    required:
    - event_id
    - qty
    type: object
  buyer_web.LoginBuyerRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  buyer_web.RegisterBuyerRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  buyer_web.UpdateBuyerRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  helper.ResponseClientModel:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  seller_web.CreateEventRequest:
    properties:
      category:
        type: string
      date:
        type: string
      location:
        type: string
      name:
        type: string
      price:
        type: number
      qty:
        type: integer
    required:
    - category
    - date
    - location
    - name
    - price
    - qty
    type: object
  seller_web.LoginSellerRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  seller_web.RegisterSellerRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  seller_web.UpdateEventRequest:
    properties:
      category:
        type: string
      date:
        type: string
      location:
        type: string
      name:
        type: string
      price:
        type: number
      qty:
        type: integer
    required:
    - category
    - date
    - location
    - name
    - price
    - qty
    type: object
  seller_web.UpdateEventStatusRequest:
    properties:
      status:
        type: string
    required:
    - status
    type: object
  seller_web.UpdateSellerRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
host: localhost:8001
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample Ticketing server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Ticketing API
  version: "1.0"
paths:
  /admin/admins:
    get:
      consumes:
      - application/json
      description: Admin (List)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Filter
        in: query
        name: filter[name]
        type: string
      - description: Filter
        in: query
        name: filter[email]
        type: string
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Admin (List)
      tags:
      - '[Admin] Admin'
  /admin/admins/{id}:
    get:
      consumes:
      - application/json
      description: Admin (View)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Admin (View)
      tags:
      - '[Admin] Admin'
  /admin/auth/login:
    post:
      consumes:
      - application/json
      description: Auth (Login)
      parameters:
      - description: Login Admin Request
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/admin_web.LoginAdminRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Auth (Login)
      tags:
      - '[Admin] Auth'
  /admin/auth/register:
    post:
      consumes:
      - application/json
      description: Auth (Register)
      parameters:
      - description: Register Admin Request
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/admin_web.RegisterAdminRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Auth (Register)
      tags:
      - '[Admin] Auth'
  /admin/buyers:
    get:
      consumes:
      - application/json
      description: Buyer (List)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Filter
        in: query
        name: filter[name]
        type: string
      - description: Filter
        in: query
        name: filter[email]
        type: string
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Buyer (List)
      tags:
      - '[Admin] Buyer'
  /admin/buyers/{id}:
    get:
      consumes:
      - application/json
      description: Buyer (View)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Buyer (View)
      tags:
      - '[Admin] Buyer'
  /admin/me:
    get:
      consumes:
      - application/json
      description: Me (View)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Me (View)
      tags:
      - '[Admin] Me'
  /admin/me/update:
    put:
      consumes:
      - application/json
      description: Me (Update)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update Admin Request
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/admin_web.UpdateAdminRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Me (Update)
      tags:
      - '[Admin] Me'
  /admin/sellers:
    get:
      consumes:
      - application/json
      description: Seller (List)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Filter
        in: query
        name: filter[name]
        type: string
      - description: Filter
        in: query
        name: filter[email]
        type: string
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Seller (List)
      tags:
      - '[Admin] Seller'
  /admin/sellers/{id}:
    get:
      consumes:
      - application/json
      description: Seller (View)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Seller (View)
      tags:
      - '[Admin] Seller'
  /buyer/auth/login:
    post:
      consumes:
      - application/json
      description: Auth (Login)
      parameters:
      - description: Login Buyer Request
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/buyer_web.LoginBuyerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Auth (Login)
      tags:
      - '[Buyer] Auth'
  /buyer/auth/register:
    post:
      consumes:
      - application/json
      description: Auth (Register)
      parameters:
      - description: Buyer details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/buyer_web.RegisterBuyerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Auth (Register)
      tags:
      - '[Buyer] Auth'
  /buyer/events:
    get:
      consumes:
      - application/json
      description: Event (List)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Filter
        in: query
        name: filter[category]
        type: string
      - description: Filter
        in: query
        name: filter[location]
        type: string
      - description: Filter
        in: query
        name: filter[name]
        type: string
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Event (List)
      tags:
      - '[Buyer] Event'
  /buyer/events/{id}:
    get:
      consumes:
      - application/json
      description: Event (View)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Event (View)
      tags:
      - '[Buyer] Event'
  /buyer/me:
    get:
      consumes:
      - application/json
      description: Me (View)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Me (View)
      tags:
      - '[Buyer] Me'
  /buyer/me/update:
    put:
      consumes:
      - application/json
      description: Me (Update)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Updated buyer details
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/buyer_web.UpdateBuyerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Me (Update)
      tags:
      - '[Buyer] Me'
  /buyer/orders:
    get:
      consumes:
      - application/json
      description: Order (List)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Filter
        in: query
        name: filter[number]
        type: string
      - description: Filter
        in: query
        name: filter[payment_status]
        type: string
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Order (List)
      tags:
      - '[Buyer] Order'
    post:
      consumes:
      - application/json
      description: Order (Create)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Event Request
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/buyer_web.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Order (Create)
      tags:
      - '[Buyer] Order'
  /buyer/orders/{id}:
    delete:
      consumes:
      - application/json
      description: Order (Delete)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Order (Delete)
      tags:
      - '[Buyer] Order'
    get:
      consumes:
      - application/json
      description: Order (View)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Order (View)
      tags:
      - '[Buyer] Order'
  /buyer/orders/{id}/pay:
    patch:
      consumes:
      - application/json
      description: Order (Pay)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Order (Pay)
      tags:
      - '[Buyer] Order'
  /buyer/tickets:
    get:
      consumes:
      - application/json
      description: Ticket (List)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Filter
        in: query
        name: filter[status]
        type: string
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Ticket (List)
      tags:
      - '[Buyer] Ticket'
  /buyer/tickets/{id}:
    get:
      consumes:
      - application/json
      description: Ticket (View)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Ticket (View)
      tags:
      - '[Buyer] Ticket'
  /general/events:
    get:
      consumes:
      - application/json
      description: Event (List)
      parameters:
      - description: Filter
        in: query
        name: filter[category]
        type: string
      - description: Filter
        in: query
        name: filter[location]
        type: string
      - description: Filter
        in: query
        name: filter[name]
        type: string
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Event (List)
      tags:
      - '[General] Event'
  /general/events/{id}:
    get:
      consumes:
      - application/json
      description: Event (View)
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Event (View)
      tags:
      - '[General] Event'
  /seller/auth/login:
    post:
      consumes:
      - application/json
      description: Auth (Login)
      parameters:
      - description: Login Seller Request
        in: body
        name: seller
        required: true
        schema:
          $ref: '#/definitions/seller_web.LoginSellerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Auth (Login)
      tags:
      - '[Seller] Auth'
  /seller/auth/register:
    post:
      consumes:
      - application/json
      description: Auth (Register)
      parameters:
      - description: Register Seller Request
        in: body
        name: seller
        required: true
        schema:
          $ref: '#/definitions/seller_web.RegisterSellerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Auth (Register)
      tags:
      - '[Seller] Auth'
  /seller/events:
    get:
      consumes:
      - application/json
      description: Event (List)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Filter
        in: query
        name: filter[category]
        type: string
      - description: Filter
        in: query
        name: filter[location]
        type: string
      - description: Filter
        in: query
        name: filter[name]
        type: string
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Event (List)
      tags:
      - '[Seller] Event'
    post:
      consumes:
      - application/json
      description: Event (Create)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Event Request
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/seller_web.CreateEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Event (Create)
      tags:
      - '[Seller] Event'
  /seller/events/{event_id}/tickets/{ticket_id}/check-in:
    put:
      consumes:
      - application/json
      description: (Check In Ticket)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: path
        name: event_id
        required: true
        type: integer
      - description: Ticket ID
        in: path
        name: ticket_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Event (Check In Ticket)
      tags:
      - '[Seller] Event'
  /seller/events/{id}:
    delete:
      consumes:
      - application/json
      description: Event (Delete)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Event (Delete)
      tags:
      - '[Seller] Event'
    get:
      consumes:
      - application/json
      description: Event (View)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Event (View)
      tags:
      - '[Seller] Event'
    put:
      consumes:
      - application/json
      description: Event (Update)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Event Request
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/seller_web.UpdateEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Event (Update)
      tags:
      - '[Seller] Event'
  /seller/events/{id}/update-status:
    patch:
      consumes:
      - application/json
      description: Event (Update Status)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Event Request
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/seller_web.UpdateEventStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Event (Update Status)
      tags:
      - '[Seller] Event'
  /seller/me:
    get:
      consumes:
      - application/json
      description: Me (View)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Seller ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Me (View)
      tags:
      - '[Seller] Me'
  /seller/me/update:
    put:
      consumes:
      - application/json
      description: Me (Update)
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Seller ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Seller Request
        in: body
        name: seller
        required: true
        schema:
          $ref: '#/definitions/seller_web.UpdateSellerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ResponseClientModel'
      summary: Me (Update)
      tags:
      - '[Seller] Me'
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Bearer
    type: apiKey
swagger: "2.0"
